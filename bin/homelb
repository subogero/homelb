#!/usr/bin/perl
use strict;
use warnings;
use FindBin;
use YAML qw(Load Dump LoadFile DumpFile);
use Getopt::Long;
use List::MoreUtils qw(uniq);

my $BIN = $FindBin::Bin;
my $script = "$BIN/$FindBin::Script";
my $VAR = "$BIN/../var";
chdir $VAR;
print STDERR "Running in @{[ `pwd` ]}";

my $verb = shift;
my $host = shift;

my $opt = { server => [] };
GetOptions($opt,
    'port|p=i',
    'server|s=s@',
    'help|h' => sub { exec "perldoc $script" }
);

$verb //= '';
die "Unknown verb $verb" unless $verb =~ /^(add|del|get|)$/;
$host //= '';

my @data = eval { @{ LoadFile "homelb.yml" } };
my ($virt) = grep { $_->{host} eq $host } @data;

if ($verb eq 'get') {
    if ($host) {
        my ($v) = grep { $_->{host} eq $host } @data;
        print Dump($v), "...\n";
        system "$BIN/homelb_link get $host";
    } else {
        print map { "$_->{host}\n" } @data;
    }
    exit;
} elsif ($verb eq 'del' && ! @{$opt->{server}}) {
    print STDERR "homelb deleting virtual $host\n";
    @data = grep { $_->{host} ne $host } @data;
    system "$BIN/homelb_link del $host";
} elsif ($virt) {
    my @old_srv = map { read_srv($_) } @{$virt->{server}};
    my @all_srv =
        $verb eq 'add' ? uniq(@old_srv, @{$opt->{server}}) :
        $verb eq 'del' ? map { $_ ~~ $opt->{server} ? () : $_ } @old_srv
                       : die "Unknown verb $verb";
    print STDERR "homelb setting servers of virtual $host to @all_srv\n";
    $virt->{server} = [ map { write_srv($_) } @all_srv ];
} elsif ($verb eq 'add') {
    print STDERR "homelb creating virtual $host\n";
    $virt = {
        host => $host,
        port => $opt->{port},
        server => [ map { write_srv($_) } @{$opt->{server}} ],
    };
    push @data, $virt;
    system "$BIN/homelb_link add $host";
} else {
    print STDERR "homelb restarting macvlans\n";
    system "$BIN/homelb_link restart";
}

if ($host) {
    print STDERR "homelb writing config\n";
    DumpFile "homelb.yml", \@data
}

open HAT, "| $BIN/homelb_ha.tempo cp" or die $!;
my $ha_yaml = Dump [ map {
    my $ip = `$BIN/homelb_link ip $_->{host}`;
    chomp $ip;
    $_->{ip} = $ip;
    $_
} @data ];
print HAT $ha_yaml;
close HAT;

my @hapids;
if (open HAP, "homelb_ha.pid") {
    @hapids = <HAP>;
    chomp @hapids;
    close HAP;
}
if (@data) {
    print STDERR "haproxy -f homelb_ha.cfg -p homelb_ha.pid -D -sf @hapids\n";
    system "haproxy -f homelb_ha.cfg -p homelb_ha.pid -D -sf @hapids";
} elsif (@hapids) {
    print STDERR "homelb stopping haproxy\n";
    kill 'TERM', @hapids;
    unlink "homelb_ha.pid";
}

# HELPERS

sub read_srv {
    my $hr = shift;
    return "$hr->{host}:$hr->{port}";
}

sub write_srv {
    my ($h, $p) = split /:/, shift;
    return { host => $h, port => $p };
}
